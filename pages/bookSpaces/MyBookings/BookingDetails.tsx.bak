import { Card, CardContent, Typography } from "@mui/material";
import dayjs from "dayjs";
import Image from "next/image";
import { useEffect, useState } from "react";
import { useRecoilValue } from "recoil";
import Layout from "../../../components/Layout";
import { selectedBookingDetails } from "../../_app";
import {
  IBookParking,
  IBookedSpaceResource,
  IMeetingService,
  IParkingDetail,
} from "../types/bookSpace";
import CalendarIcon from "/assets/icons/calendarIcon.svg";
import SystemManagement from "/assets/icons/systemmanagement.svg";
import {
  getBookedParkingsByMeetingId,
  getBookedServicesByMeetingId,
} from "../../../services/bookSpace.service";
import BookParking from "../../../assets/icons/parkingcar.svg";
import { services } from "../../../src/constants/spaceManagement/config";

const BookingDetails = () => {
  const bookingMeetingDetail = useRecoilValue(selectedBookingDetails);
  const [parkingDetails, setParkingDetails] = useState<IBookParking[]>([]);
  const [meetingServices, setMeetingServices] = useState<{
    [serviceId: number]: IMeetingService;
  }>({} as { [key: string]: IMeetingService });

  useEffect(() => {
    const getParkingDetails = async () => {
      const parkingDetails = await getBookedParkingsByMeetingId(
        bookingMeetingDetail.meetingId
      );
      setParkingDetails(parkingDetails);
    };
    const getServicesDetails = async () => {
      const serviceDetails = await getBookedServicesByMeetingId(
        bookingMeetingDetail.meetingId
      );
      let _servicesMap: { [key: string]: IMeetingService } = {} as {
        [key: string]: IMeetingService;
      };
      serviceDetails.forEach(
        (serviceDetail: IMeetingService, index: number) => {
          _servicesMap[serviceDetail.serviceId] = serviceDetail;
        }
      );
      setMeetingServices(_servicesMap);
    };
    getParkingDetails();
    getServicesDetails();
  }, [bookingMeetingDetail]);

  return (
    <Layout>
      <div className="flex pb-4 flex-wrap gap-3">
        <div className=" sm:w-full w-2/4">
          <Typography
            gutterBottom
            variant="h6"
            component="div"
            fontWeight="bold"
          >
            {bookingMeetingDetail && bookingMeetingDetail.meetingName}
          </Typography>
          <Typography
            variant="body2"
            color="text.secondary"
            className="text-xs"
          >
            {bookingMeetingDetail &&
              `${bookingMeetingDetail.floorName} ${bookingMeetingDetail.buildingName}`}
          </Typography>
        </div>
        <div className="flex gap-8 sm:w-full md:w-2/4">
          <div className="flex gap-3">
            <CalendarIcon />
            <div>
              <Typography
                gutterBottom
                variant="h5"
                component="div"
                className="text-xs text-text-light"
              >
                Start Date & Start Time
              </Typography>
              <Typography
                variant="body2"
                color="text.secondary"
                className="text-xs font-bold"
              >
                {bookingMeetingDetail &&
                  bookingMeetingDetail.startDate &&
                  dayjs(bookingMeetingDetail.startDate).format(
                    "MMMM DD hh:mm A"
                  )}
              </Typography>
            </div>
          </div>
          <div className="flex gap-3">
            <CalendarIcon />
            <div>
              <Typography
                gutterBottom
                variant="h5"
                component="div"
                className="text-xs text-text-light"
              >
                End Date & End Time
              </Typography>
              <Typography
                variant="body2"
                color="text.secondary"
                className="text-xs font-bold"
              >
                {bookingMeetingDetail &&
                  bookingMeetingDetail.endDate &&
                  dayjs(bookingMeetingDetail.endDate).format("MMMM DD hh:mm A")}
              </Typography>
            </div>
          </div>
        </div>
      </div>
      <hr />
      <div className="p-6">
        <div className="flex gap-3">
          <Image
            src={"/assets/images/roomdesk.png"}
            alt=""
            width="60"
            height="60"
          />
          <div>
            <Typography
              className="mb-0"
              gutterBottom
              variant="h6"
              component="div"
            >
              {bookingMeetingDetail.spaceName}
            </Typography>
            <div>
              <div className="flex gap-1 w-full pb-4">
                {bookingMeetingDetail?.spaceResources?.map(
                  (spaceResource: IBookedSpaceResource, index: number) => (
                    <SystemManagement key={index} className="me-3" />
                  )
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
      <div className="d-flex flex-column mt-8 ms-4">
        <div className="sm:flex-col flex mb-6">
          <div className="sm:w-full w-2/4">
            <div className="flex gap-6 py-4">
              <div>
                <Image
                  src={"/assets/images/Present_Icon.png"}
                  alt=""
                  width="18"
                  height="10"
                />
              </div>

              <Typography
                gutterBottom
                variant="h3"
                className="text-xs text-text-bold"
              >{`BRID${(100000 + bookingMeetingDetail.meetingId)
                .toString()
                .substring(1, 6)}`}</Typography>
            </div>

            <div className="flex gap-6 py-4">
              <div>
                <Image
                  src={"/assets/images/Present_Icon.png"}
                  alt=""
                  width="18"
                  height="10"
                />
              </div>

              <Typography
                gutterBottom
                variant="h3"
                className="text-xs text-text-bold"
              >{`${bookingMeetingDetail.floorName}, ${bookingMeetingDetail.address}`}</Typography>
            </div>

            <div className="flex gap-6 py-4">
              <div>
                <Image
                  src={"/assets/images/Present_Icon.png"}
                  alt=""
                  width="18"
                  height="10"
                />
              </div>
              <Typography
                gutterBottom
                variant="h3"
                className="text-xs text-text-bold"
              >
                Jonathan Cost, Henry Courier, Joshep Bay, Johnbay@gmail.com
              </Typography>
            </div>

            <div className="flex gap-6 py-4">
              <div>
                <Image
                  src={"/assets/images/Present_Icon.png"}
                  alt=""
                  width="18"
                  height="10"
                />
              </div>
              <Typography
                gutterBottom
                variant="h3"
                className="text-xs text-text-bold"
              >
                {bookingMeetingDetail.notes}
              </Typography>
            </div>
          </div>
          <div className="sm:w-full w-2/4">
            <Typography gutterBottom component="div" className="fs-5">
              Parking
            </Typography>
            {parkingDetails.map((x, i) => (
              <Card
                key={i}
                className="rounded-md"
                sx={{
                  width: "350px",
                  display: "flex",
                  padding: "12px",
                  gap: "1rem",
                }}
              >
                <div>
                  <BookParking />
                </div>
                <div className="d-flex flex-column flex-wrap align-content-start w-100">
                  <Typography
                    sx={{ fontWeight: "bold" }}
                    marginTop={"10px"}
                    align="left"
                  >
                    {`Slot - ${x.slotId}`}
                  </Typography>
                  <div className="d-flex justify-content-between">
                    <Typography
                      sx={{ alignContent: "left" }}
                      marginTop={"5px"}
                      align="center"
                      className="me-5"
                    >
                      {x.participantName}
                    </Typography>
                    <Typography
                      sx={{ fontWeight: "normal", alignContent: "left" }}
                      marginTop={"5px"}
                      align="center"
                    >
                      {x.vechicleNumber}
                    </Typography>
                  </div>
                </div>
              </Card>
            ))}
          </div>
        </div>
        <div className="mb-16">
          <Typography gutterBottom component="div" className="fs-5">
            Services
          </Typography>
          <div className="d-flex flex-row mt-3">
            {services
              .filter((service) =>
                Object.keys(meetingServices).includes(
                  service.serviceId.toString()
                )
              )
              .map((service, index: number) => {
                return (
                  <div className="d-flex flex-row me-5" key={index}>
                    <div className="me-3">
                      <Image
                        src={service.serviceIcon}
                        alt={""}
                        className="float-left md:float-none sm:float-none lg:float-none"
                        width="30"
                        height="30"
                      />
                    </div>
                    <Typography
                      gutterBottom
                      component="div"
                      className="fs-6 mt-1"
                    >
                      {`${
                        meetingServices[service.serviceId].serviceCount
                      }     ${service.serviceName}`}
                    </Typography>
                  </div>
                );
              })}
          </div>
        </div>
      </div>
    </Layout>
  );
};

export default BookingDetails;
